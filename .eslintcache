[{"/home/sergey/Projects/ads-panel-app/src/App.tsx":"1","/home/sergey/Projects/ads-panel-app/src/index.tsx":"2","/home/sergey/Projects/ads-panel-app/src/views/Login.tsx":"3","/home/sergey/Projects/ads-panel-app/src/reportWebVitals.ts":"4","/home/sergey/Projects/ads-panel-app/src/views/Dashboard.tsx":"5","/home/sergey/Projects/ads-panel-app/src/store/sagas.ts":"6","/home/sergey/Projects/ads-panel-app/src/api/index.ts":"7","/home/sergey/Projects/ads-panel-app/src/store/reducers.ts":"8","/home/sergey/Projects/ads-panel-app/src/store/index.ts":"9","/home/sergey/Projects/ads-panel-app/src/api/request.ts":"10","/home/sergey/Projects/ads-panel-app/src/components/Panel.tsx":"11","/home/sergey/Projects/ads-panel-app/src/lib/index.ts":"12","/home/sergey/Projects/ads-panel-app/src/views/Page404.tsx":"13","/home/sergey/Projects/ads-panel-app/src/views/Home.tsx":"14","/home/sergey/Projects/ads-panel-app/src/components/Auth.tsx":"15","/home/sergey/Projects/ads-panel-app/src/components/Dialog.tsx":"16","/home/sergey/Projects/ads-panel-app/src/components/AlertMessage.tsx":"17","/home/sergey/Projects/ads-panel-app/src/views/Registration.tsx":"18","/home/sergey/Projects/ads-panel-app/src/views/Confirm.tsx":"19","/home/sergey/Projects/ads-panel-app/src/views/Forgot.tsx":"20","/home/sergey/Projects/ads-panel-app/src/views/ChangePassword.tsx":"21","/home/sergey/Projects/ads-panel-app/src/components/Graph.tsx":"22","/home/sergey/Projects/ads-panel-app/src/components/BlockProgress.tsx":"23","/home/sergey/Projects/ads-panel-app/src/worker/index.ts":"24","/home/sergey/Projects/ads-panel-app/src/components/BlockSelect.tsx":"25"},{"size":3033,"mtime":1606350723186,"results":"26","hashOfConfig":"27"},{"size":1105,"mtime":1606354906439,"results":"28","hashOfConfig":"29"},{"size":4603,"mtime":1606347055404,"results":"30","hashOfConfig":"27"},{"size":425,"mtime":1606158462824,"results":"31","hashOfConfig":"27"},{"size":3102,"mtime":1606366867498,"results":"32","hashOfConfig":"29"},{"size":4502,"mtime":1606362833605,"results":"33","hashOfConfig":"29"},{"size":2349,"mtime":1606364403760,"results":"34","hashOfConfig":"29"},{"size":7771,"mtime":1606362407648,"results":"35","hashOfConfig":"29"},{"size":1581,"mtime":1606362483969,"results":"36","hashOfConfig":"29"},{"size":1399,"mtime":1606361920029,"results":"37","hashOfConfig":"29"},{"size":8978,"mtime":1606292672478,"results":"38","hashOfConfig":"29"},{"size":879,"mtime":1606356874522,"results":"39","hashOfConfig":"29"},{"size":223,"mtime":1606279881709,"results":"40","hashOfConfig":"27"},{"size":257,"mtime":1606279865522,"results":"41","hashOfConfig":"27"},{"size":3446,"mtime":1606348062387,"results":"42","hashOfConfig":"27"},{"size":1161,"mtime":1606292312021,"results":"43","hashOfConfig":"29"},{"size":317,"mtime":1606289733044,"results":"44","hashOfConfig":"27"},{"size":7676,"mtime":1606343167873,"results":"45","hashOfConfig":"29"},{"size":1410,"mtime":1606298599663,"results":"46","hashOfConfig":"27"},{"size":2969,"mtime":1606342686030,"results":"47","hashOfConfig":"27"},{"size":4286,"mtime":1606349864375,"results":"48","hashOfConfig":"27"},{"size":829,"mtime":1606367119277,"results":"49","hashOfConfig":"29"},{"size":156,"mtime":1606343647110,"results":"50","hashOfConfig":"29"},{"size":699,"mtime":1606367809172,"results":"51","hashOfConfig":"29"},{"size":1221,"mtime":1606361219125,"results":"52","hashOfConfig":"29"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oxmgbp",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"107wbcf",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":7,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"96","usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"102","usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/home/sergey/Projects/ads-panel-app/src/App.tsx",[],"/home/sergey/Projects/ads-panel-app/src/index.tsx",[],"/home/sergey/Projects/ads-panel-app/src/views/Login.tsx",[],["111","112","113","114","115"],"/home/sergey/Projects/ads-panel-app/src/reportWebVitals.ts",[],"/home/sergey/Projects/ads-panel-app/src/views/Dashboard.tsx",["116","117","118","119","120","121","122","123"],"/home/sergey/Projects/ads-panel-app/src/store/sagas.ts",[],"/home/sergey/Projects/ads-panel-app/src/api/index.ts",[],"/home/sergey/Projects/ads-panel-app/src/store/reducers.ts",[],"/home/sergey/Projects/ads-panel-app/src/store/index.ts",[],"/home/sergey/Projects/ads-panel-app/src/api/request.ts",[],"/home/sergey/Projects/ads-panel-app/src/components/Panel.tsx",[],"/home/sergey/Projects/ads-panel-app/src/lib/index.ts",[],"/home/sergey/Projects/ads-panel-app/src/views/Page404.tsx",["124","125"],"import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as lib from '../lib';\n\nexport default function Page404() {\n  useEffect(() => {\n    \n  }, []);\n\n  return <Redirect to=\"/\" />;\n}\n",["126","127","128","129","130"],"/home/sergey/Projects/ads-panel-app/src/views/Home.tsx",["131","132","133"],"import React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport * as lib from '../lib';\n\nexport default function Home() {\n  useEffect(() => {\n    \n  }, []);\n\n  return <Typography variant=\"h2\">Home page</Typography>;\n}","/home/sergey/Projects/ads-panel-app/src/components/Auth.tsx",[],"/home/sergey/Projects/ads-panel-app/src/components/Dialog.tsx",[],"/home/sergey/Projects/ads-panel-app/src/components/AlertMessage.tsx",["134"],"import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport * as Types from '../react-app-env';\n\nexport default function AllertMessage(props: Types.AlertProps) {\n  const { message, status }: any = props;\n  return (\n    <Alert variant=\"outlined\" severity={status}>\n      {message}\n    </Alert>\n  );\n}","/home/sergey/Projects/ads-panel-app/src/views/Registration.tsx",["135"],"/home/sergey/Projects/ads-panel-app/src/views/Confirm.tsx",["136"],"import React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport { Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport AlertMessage from '../components/AlertMessage';\nimport * as Types from '../react-app-env';\nimport { action, store } from '../store';\n\nexport default function Confirm() {\n  const history = useHistory();\n  const parsedQuery = queryString.parse(history.location.search);\n  const { e, k } = parsedQuery;\n  const _alert: Types.AlertProps = {\n    message: 'Alert closed',\n    status: 'info',\n    open: false,\n  };\n  const [alert, setAlert] = useState(_alert);\n\n  useEffect(() => {\n    store.subscribe(() => {\n      const state = store.getState();\n      const { confirmData } = state;\n      if (confirmData) {\n        const { data }: any = confirmData;\n        if (confirmData.type === 'CONFIRM_SUCCEEDED') {\n          setAlert({\n            open: true,\n            status: data.result,\n            message: data.message,\n          });\n        }\n      }\n    });\n    action({\n      type: 'CONFIRM_REQUESTED',\n      args: {\n        params: { e, k },\n      },\n    });\n  }, []);\n\n  return (\n    <div className=\"col-center\">\n      <Typography variant=\"h4\">{e}</Typography>\n      <div className=\"form-item\">\n        {alert.open ? <AlertMessage message={alert.message} status={alert.status} /> : ''}\n      </div>\n    </div>\n  );\n}","/home/sergey/Projects/ads-panel-app/src/views/Forgot.tsx",["137"],"import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport {\n  Typography,\n  TextField,\n  Button,\n  FormGroup,\n  FormLabel,\n  CircularProgress,\n} from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\nimport AlertMessage from '../components/AlertMessage';\nimport { action, store, loadStore } from '../store';\nimport * as Types from '../react-app-env';\n\nlet _storeSubs = false;\nlet _loadStoreSubs = false;\n\nexport default function Confirm() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const [load, setLoad] = useState(false);\n  const [email, setEmail] = useState('');\n  const _alert: Types.AlertProps = {\n    open: false,\n    message: 'Alert closed',\n    status: 'info',\n  };\n  const [alert, setAlert] = useState(_alert);\n  useEffect(() => {\n    if (!_loadStoreSubs) {\n      _loadStoreSubs = true;\n      loadStore.subscribe(() => {\n        setLoad(loadStore.getState().value);\n      });\n    }\n    if (!_storeSubs) {\n      _storeSubs = true;\n      store.subscribe(() => {\n        const state = store.getState();\n        const { emailData } = state;\n        if (emailData) {\n          if (state.type === 'EMAIL_SUCCEEDED') {\n            const { data }: any = emailData;\n            setAlert({\n              message: data.message,\n              status: data.result,\n              open: true,\n            });\n            loadStore.dispatch({ type: 'SET_LOAD', value: false });\n          } else if (state.type === 'EMAIL_FAILED') {\n            const { message }: any = emailData.data?.errorData;\n            enqueueSnackbar(`Forgot password: ${message}`);\n            loadStore.dispatch({ type: 'SET_LOAD', value: false });\n          }\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <div className={clsx('col-center')}>\n      <div className=\"header\">\n        <Typography variant=\"h4\">Request to change password</Typography>\n      </div>\n      <FormGroup>\n        <FormLabel>Email</FormLabel>\n        <div className=\"form-item\">\n          <TextField\n            defaultValue={email}\n            onChange={(e: any) => {\n              setEmail(e.target.value);\n            }}\n            type=\"email\"\n            variant=\"outlined\"\n            placeholder=\"email\"\n          />\n        </div>\n      </FormGroup>\n      <div className=\"form-item\">\n        {load ? (\n          <CircularProgress />\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n            // eslint-disable-next-line no-unused-vars\n            onClick={(e: any) => {\n              setAlert(_alert);\n              loadStore.dispatch({ type: 'SET_LOAD', value: true });\n              action({ type: 'EMAIL_REQUESTED', args: { body: { email } } });\n            }}>\n            Send\n          </Button>\n        )}\n      </div>\n      <div className=\"form-item\">\n        {alert.open ? <AlertMessage status={alert.status} message={alert.message} /> : ''}\n      </div>\n    </div>\n  );\n}\n","/home/sergey/Projects/ads-panel-app/src/views/ChangePassword.tsx",["138","139"],"import React, { useState, useEffect } from 'react';\nimport { Typography, FormLabel, FormGroup, TextField, Button } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport queryString from 'query-string';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport BlockProgress from '../components/BlockProgress';\nimport Auth from '../components/Auth';\nimport AlertMessage from '../components/AlertMessage';\nimport { loadStore, store, action } from '../store';\nimport * as Types from '../react-app-env';\n\nlet _storeSubs = false;\nlet _loadStoreSubs = false;\n\nexport default function ChangePassword() {\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n  const [password, setPassword] = useState('');\n  const [passwordRepeat, setPasswordRepeat] = useState('');\n  const [load, setLoad] = useState(false);\n  const parsedQuery = queryString.parse(history.location.search);\n  const _alert: Types.AlertProps = {\n    message: 'Alert closed',\n    status: 'info',\n    open: false,\n  };\n  const [alert, setAlert] = useState(_alert);\n\n  useEffect(() => {\n    if (!_loadStoreSubs) {\n      _loadStoreSubs = true;\n      loadStore.subscribe(() => {\n        setLoad(loadStore.getState().value);\n      });\n    }\n    if (!_storeSubs) {\n      _storeSubs = true;\n      store.subscribe(() => {\n        const state = store.getState();\n        if (state.passData) {\n          if (state.type === 'CHANGE_PASS_FAILED') {\n            const { message }: any = state.passData?.data?.errorData;\n            enqueueSnackbar(`Change password: ${message}`);\n            loadStore.dispatch({ type: 'SET_LOAD', value: false });\n          } else if (state.type === 'CHANGE_PASS_SUCCEEDED') {\n            loadStore.dispatch({ type: 'SET_LOAD', value: false });\n            const { data } = state.passData;\n            const newAlert: any = {\n              open: true,\n              message: data?.message,\n              status: data?.result,\n            };\n            setAlert(newAlert);\n            if (data?.result === 'success') {\n              setTimeout(() => {\n                history.push('/');\n              }, 1500);\n            }\n          }\n        }\n      });\n    }\n  }, []);\n\n  const token: any = parsedQuery.k;\n  const email: any = parsedQuery.e;\n  return (\n    <div className={clsx('login-wrapper', 'col-center')}>\n      <div className=\"header\">\n        <Typography variant=\"h4\">Change password form</Typography>\n      </div>\n      <div className=\"form-item\">\n        <Typography>Please fill in all fields</Typography>\n      </div>\n      <FormGroup>\n        <FormLabel>Password</FormLabel>\n        <div className={clsx('form-item', 'col-center')}>\n          <TextField\n            defaultValue={password}\n            onChange={(e: any) => {\n              setPassword(e.target.value);\n            }}\n            type=\"password\"\n            variant=\"outlined\"\n            placeholder=\"password\"\n          />\n        </div>\n        <FormLabel>Password repeat</FormLabel>\n        <div className={clsx('form-item', 'col-center')}>\n          <TextField\n            defaultValue={passwordRepeat}\n            onChange={(e: any) => {\n              setPasswordRepeat(e.target.value);\n            }}\n            type=\"password\"\n            variant=\"outlined\"\n            placeholder=\"password repeat\"\n          />\n        </div>\n      </FormGroup>\n      <div className=\"form-item\">\n        {load ? (\n          <BlockProgress />\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n            // eslint-disable-next-line no-unused-vars\n            onClick={(e: any) => {\n              loadStore.dispatch({ type: 'SET_LOAD', value: true });\n              action({\n                type: 'CHANGE_PASS_REQUESTED',\n                args: { token, body: { password, password_repeat: passwordRepeat, email } },\n              });\n              setAlert(_alert);\n            }}>\n            Send\n          </Button>\n        )}\n      </div>\n      <div className=\"form-item\">\n        {alert.open ? <AlertMessage message={alert.message} status={alert.status} /> : ''}\n      </div>\n      <div className=\"form-item\">\n        <Link to=\"/forgot\">Send new email</Link>\n      </div>\n    </div>\n  );\n}","/home/sergey/Projects/ads-panel-app/src/components/Graph.tsx",["140"],"/home/sergey/Projects/ads-panel-app/src/components/BlockProgress.tsx",["141"],"/home/sergey/Projects/ads-panel-app/src/worker/index.ts",["142","143","144"],"/home/sergey/Projects/ads-panel-app/src/components/BlockSelect.tsx",["145","146","147"],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":16,"column":7,"nodeType":"160","messageId":"161","endLine":16,"endColumn":12},{"ruleId":"162","severity":1,"message":"163","line":17,"column":4,"nodeType":null,"endLine":17,"endColumn":103,"fix":"164"},{"ruleId":"162","severity":1,"message":"165","line":56,"column":13,"nodeType":null,"endLine":56,"endColumn":38,"fix":"166"},{"ruleId":"162","severity":1,"message":"167","line":57,"column":1,"nodeType":null,"endLine":57,"endColumn":7,"fix":"168"},{"ruleId":"162","severity":1,"message":"169","line":58,"column":1,"nodeType":null,"endLine":58,"endColumn":20,"fix":"170"},{"ruleId":"162","severity":1,"message":"171","line":59,"column":1,"nodeType":null,"endLine":59,"endColumn":8,"fix":"172"},{"ruleId":"162","severity":1,"message":"173","line":60,"column":1,"nodeType":null,"endLine":60,"endColumn":9,"fix":"174"},{"ruleId":"162","severity":1,"message":"175","line":102,"column":38,"nodeType":null,"endLine":103,"endColumn":1,"fix":"176"},{"ruleId":"158","severity":1,"message":"177","line":3,"column":13,"nodeType":"160","messageId":"161","endLine":3,"endColumn":16},{"ruleId":"162","severity":1,"message":"178","line":6,"column":20,"nodeType":null,"endLine":8,"endColumn":3,"fix":"179"},{"ruleId":"148","replacedBy":"180"},{"ruleId":"150","replacedBy":"181"},{"ruleId":"152","replacedBy":"182"},{"ruleId":"154","replacedBy":"183"},{"ruleId":"156","replacedBy":"184"},{"ruleId":"158","severity":1,"message":"177","line":3,"column":13,"nodeType":"160","messageId":"161","endLine":3,"endColumn":16},{"ruleId":"162","severity":1,"message":"178","line":6,"column":20,"nodeType":null,"endLine":8,"endColumn":3,"fix":"185"},{"ruleId":"162","severity":1,"message":"186","line":11,"column":2,"nodeType":null,"endLine":11,"endColumn":2,"fix":"187"},{"ruleId":"162","severity":1,"message":"186","line":12,"column":2,"nodeType":null,"endLine":12,"endColumn":2,"fix":"188"},{"ruleId":"162","severity":1,"message":"186","line":230,"column":2,"nodeType":null,"endLine":230,"endColumn":2,"fix":"189"},{"ruleId":"162","severity":1,"message":"186","line":51,"column":2,"nodeType":null,"endLine":51,"endColumn":2,"fix":"190"},{"ruleId":"158","severity":1,"message":"191","line":20,"column":28,"nodeType":"160","messageId":"161","endLine":20,"endColumn":41},{"ruleId":"158","severity":1,"message":"192","line":8,"column":8,"nodeType":"160","messageId":"161","endLine":8,"endColumn":12},{"ruleId":"162","severity":1,"message":"186","line":131,"column":2,"nodeType":null,"endLine":131,"endColumn":2,"fix":"193"},{"ruleId":"162","severity":1,"message":"194","line":35,"column":2,"nodeType":null,"endLine":35,"endColumn":3,"fix":"195"},{"ruleId":"162","severity":1,"message":"186","line":6,"column":2,"nodeType":null,"endLine":6,"endColumn":2,"fix":"196"},{"ruleId":"197","severity":1,"message":"198","line":14,"column":1,"nodeType":"199","endLine":22,"endColumn":2},{"ruleId":"162","severity":1,"message":"200","line":19,"column":22,"nodeType":null,"endLine":19,"endColumn":22,"fix":"201"},{"ruleId":"162","severity":1,"message":"186","line":22,"column":2,"nodeType":null,"endLine":22,"endColumn":2,"fix":"202"},{"ruleId":"158","severity":1,"message":"203","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":16},{"ruleId":"158","severity":1,"message":"204","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":22},{"ruleId":"162","severity":1,"message":"186","line":41,"column":2,"nodeType":null,"endLine":41,"endColumn":2,"fix":"205"},"lines-around-directive",["206"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'_data' is assigned a value but never used.","Identifier","unusedVar","prettier/prettier","Replace `·date:·new·Date('2020-11-14T12:56:37.000Z').toString().replace(/\\(.*\\)/,·''),·clicks:·10,·costs:·12` with `⏎····date:·new·Date('2020-11-14T12:56:37.000Z').toString().replace(/\\(.*\\)/,·''),⏎····clicks:·10,⏎····costs:·12,⏎·`",{"range":"207","text":"208"},"Replace `·type:·'GRAPH_REQUESTED',` with `⏎······type:·'GRAPH_REQUESTED',⏎·····`",{"range":"209","text":"210"},"Replace `······` with `········`",{"range":"211","text":"212"},"Replace `········time:·value` with `··········time:·value,`",{"range":"213","text":"214"},"Replace `······}` with `········},`",{"range":"215","text":"216"},"Replace `····}·})` with `······},⏎····});`",{"range":"217","text":"218"},"Delete `⏎`",{"range":"219","text":"220"},"'lib' is defined but never used.","Delete `⏎····⏎··`",{"range":"221","text":"220"},["206"],[],[],[],[],{"range":"222","text":"220"},"Insert `⏎`",{"range":"223","text":"224"},{"range":"225","text":"224"},{"range":"226","text":"224"},{"range":"227","text":"224"},"'closeSnackbar' is assigned a value but never used.","'Auth' is defined but never used.",{"range":"228","text":"224"},"Delete `;`",{"range":"229","text":"220"},{"range":"230","text":"224"},"import/prefer-default-export","Prefer default export.","ExportNamedDeclaration","Insert `,`",{"range":"231","text":"232"},{"range":"233","text":"224"},"'MenuItem' is defined but never used.","'FormHelperText' is defined but never used.",{"range":"234","text":"224"},"padding-line-between-statements",[541,640],"\n    date: new Date('2020-11-14T12:56:37.000Z').toString().replace(/\\(.*\\)/, ''),\n    clicks: 10,\n    costs: 12,\n ",[1662,1687],"\n      type: 'GRAPH_REQUESTED',\n     ",[1696,1702],"        ",[1710,1729],"          time: value,",[1730,1737],"        },",[1738,1746],"      },\n    });",[2990,2991],"",[174,182],[181,189],[257,257],"\n",[317,317],[7552,7552],[1410,1410],[4286,4286],[827,828],[156,156],[534,534],",",[549,549],[1221,1221]]