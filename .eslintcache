[{"/home/sergey/Projects/ads-panel-app/src/App.tsx":"1","/home/sergey/Projects/ads-panel-app/src/index.tsx":"2","/home/sergey/Projects/ads-panel-app/src/views/Login.tsx":"3","/home/sergey/Projects/ads-panel-app/src/reportWebVitals.ts":"4","/home/sergey/Projects/ads-panel-app/src/views/Dashboard.tsx":"5","/home/sergey/Projects/ads-panel-app/src/store/sagas.ts":"6","/home/sergey/Projects/ads-panel-app/src/api/index.ts":"7","/home/sergey/Projects/ads-panel-app/src/store/reducers.ts":"8","/home/sergey/Projects/ads-panel-app/src/store/index.ts":"9","/home/sergey/Projects/ads-panel-app/src/api/request.ts":"10","/home/sergey/Projects/ads-panel-app/src/components/Panel.tsx":"11","/home/sergey/Projects/ads-panel-app/src/lib/index.ts":"12","/home/sergey/Projects/ads-panel-app/src/views/Page404.tsx":"13","/home/sergey/Projects/ads-panel-app/src/views/Home.tsx":"14","/home/sergey/Projects/ads-panel-app/src/components/Auth.tsx":"15","/home/sergey/Projects/ads-panel-app/src/components/Dialog.tsx":"16","/home/sergey/Projects/ads-panel-app/src/components/AlertMessage.tsx":"17","/home/sergey/Projects/ads-panel-app/src/views/Registration.tsx":"18","/home/sergey/Projects/ads-panel-app/src/views/Confirm.tsx":"19","/home/sergey/Projects/ads-panel-app/src/views/Forgot.tsx":"20","/home/sergey/Projects/ads-panel-app/src/views/ChangePassword.tsx":"21","/home/sergey/Projects/ads-panel-app/src/components/Graph.tsx":"22","/home/sergey/Projects/ads-panel-app/src/components/BlockProgress.tsx":"23","/home/sergey/Projects/ads-panel-app/src/components/BlockSelect.tsx":"24","/home/sergey/Projects/ads-panel-app/src/components/ListElement.tsx":"25","/home/sergey/Projects/ads-panel-app/src/components/DatePicker.tsx":"26","/home/sergey/Projects/ads-panel-app/src/components/TableStatisistic.tsx":"27","/home/sergey/Projects/ads-panel-app/src/components/Pagination.tsx":"28","/home/sergey/Projects/ads-panel-app/src/worker/index.ts":"29","/home/sergey/Projects/ads-panel-app/src/components/TableCampaigns.tsx":"30","/home/sergey/Projects/ads-panel-app/src/components/BlockPopper.tsx":"31","/home/sergey/Projects/ads-panel-app/src/api/requestMultipart.ts":"32","/home/sergey/Projects/ads-panel-app/src/views/Campaigns.tsx":"33","/home/sergey/Projects/ads-panel-app/src/views/CreateUpdateCampaign.tsx":"34"},{"size":3848,"mtime":1606733565746,"results":"35","hashOfConfig":"36"},{"size":1497,"mtime":1606443206131,"results":"37","hashOfConfig":"36"},{"size":4535,"mtime":1606530997223,"results":"38","hashOfConfig":"36"},{"size":425,"mtime":1606158462824,"results":"39","hashOfConfig":"36"},{"size":15543,"mtime":1606643961459,"results":"40","hashOfConfig":"36"},{"size":14596,"mtime":1606720094966,"results":"41","hashOfConfig":"36"},{"size":6028,"mtime":1606719815496,"results":"42","hashOfConfig":"36"},{"size":20434,"mtime":1606720103045,"results":"43","hashOfConfig":"36"},{"size":2357,"mtime":1606720129316,"results":"44","hashOfConfig":"36"},{"size":1507,"mtime":1606694535428,"results":"45","hashOfConfig":"36"},{"size":10804,"mtime":1606732168148,"results":"46","hashOfConfig":"36"},{"size":1170,"mtime":1606694508049,"results":"47","hashOfConfig":"36"},{"size":223,"mtime":1606279881709,"results":"48","hashOfConfig":"36"},{"size":257,"mtime":1606279865522,"results":"49","hashOfConfig":"36"},{"size":3804,"mtime":1606636403245,"results":"50","hashOfConfig":"36"},{"size":1290,"mtime":1606532411811,"results":"51","hashOfConfig":"36"},{"size":317,"mtime":1606289733044,"results":"52","hashOfConfig":"36"},{"size":8605,"mtime":1606733454331,"results":"53","hashOfConfig":"36"},{"size":1410,"mtime":1606298599663,"results":"54","hashOfConfig":"36"},{"size":2910,"mtime":1606530913678,"results":"55","hashOfConfig":"36"},{"size":4193,"mtime":1606530840661,"results":"56","hashOfConfig":"36"},{"size":1056,"mtime":1606448088412,"results":"57","hashOfConfig":"36"},{"size":156,"mtime":1606343647110,"results":"58","hashOfConfig":"36"},{"size":1143,"mtime":1606531421149,"results":"59","hashOfConfig":"36"},{"size":991,"mtime":1606382533024,"results":"60","hashOfConfig":"36"},{"size":360,"mtime":1606444013099,"results":"61","hashOfConfig":"36"},{"size":2969,"mtime":1606631303376,"results":"62","hashOfConfig":"36"},{"size":526,"mtime":1606474030812,"results":"63","hashOfConfig":"36"},{"size":3090,"mtime":1606708010657,"results":"64","hashOfConfig":"36"},{"size":5483,"mtime":1606708066884,"results":"65","hashOfConfig":"36"},{"size":757,"mtime":1606546840388,"results":"66","hashOfConfig":"36"},{"size":1086,"mtime":1606621975054,"results":"67","hashOfConfig":"36"},{"size":7591,"mtime":1606703528129,"results":"68","hashOfConfig":"36"},{"size":46365,"mtime":1606728634521,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ydohv9",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"86","usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"112","usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"117","usedDeprecatedRules":"83"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"122","usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"125","usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"128","usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"134","usedDeprecatedRules":"77"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sergey/Projects/ads-panel-app/src/App.tsx",[],"/home/sergey/Projects/ads-panel-app/src/index.tsx",[],["156","157","158","159","160"],"/home/sergey/Projects/ads-panel-app/src/views/Login.tsx",[],["161","162","163","164","165"],"/home/sergey/Projects/ads-panel-app/src/reportWebVitals.ts",[],["166","167","168","169","170"],"/home/sergey/Projects/ads-panel-app/src/views/Dashboard.tsx",[],["171","172","173","174","175"],"/home/sergey/Projects/ads-panel-app/src/store/sagas.ts",["176"],"/**\n * Файл с сагами, здесь объявляется функция задачи например для запроса на сервер и наполнения хранилища,\n * в зависимости от результата запроса.\n * И экспортируется прослушиватель для store/index.ts\n * ВНИМАНИЕ! Здесь типы не привязаны к интерфейсам, смотреть не перепутать type! TODO - привязать пока не поздно. Начал проверять с changePassword\n */\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport Api from '../api/index';\nimport * as Types from '../react-app-env';\n\nconst dev = process.env.NODE_ENV === 'development';\n\nconst errorData: Types.ServerResponse = {\n  result: 'error',\n  message: 'No internet',\n  body: {},\n};\n\n// Задачи\n\n/**\n * Запрос данных пользователя\n * @param action\n */\nfunction* fetchUser(action: any) {\n  try {\n    const data = yield call(Api.fetchUser, action);\n    yield put({ type: 'USER_FETCH_SUCCEEDED', data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    yield put({ type: 'USER_FETCH_FAILED', errorData });\n  }\n}\n\n/**\n * Вход пользователя\n * @param action\n */\nfunction* login(action: any) {\n  try {\n    const data = yield call(Api.login, action);\n    yield put({ type: 'LOGIN_SUCCEEDED', data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    yield put({ type: 'LOGIN_FAILED', errorData });\n  }\n}\n\n/**\n * Регистрация пользователя\n * @param action\n */\nfunction* register(action: any) {\n  try {\n    const data = yield call(Api.register, action);\n    yield put({ type: 'REGISTRATION_SUCCEEDED', data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    yield put({ type: 'REGISTRATION_FAILED', errorData });\n  }\n}\n\n/**\n * Подтверждение почты\n * @param action\n */\nfunction* confirm(action: any) {\n  try {\n    const data = yield call(Api.confirm, action);\n    yield put({ type: 'CONFIRM_SUCCEEDED', data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    yield put({ type: 'CONFIRM_FAILED', errorData });\n  }\n}\n\n/**\n * Запрос на существование почты в базе\n * @param action\n */\nfunction* getEmail(action: any) {\n  try {\n    const data = yield call(Api.getEmail, action);\n    yield put({ type: 'EMAIL_SUCCEEDED', data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    yield put({ type: 'EMAIL_FAILED', errorData });\n  }\n}\n\n/**\n * Смена пароля\n * @param action\n */\nfunction* changePassword(action: any) {\n  try {\n    const data = yield call(Api.changePasword, action);\n    const type: Types.ActionTypesChangePass = 'CHANGE_PASS_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesChangePass = 'CHANGE_PASS_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Получение статистики графика\n * @param action\n */\nfunction* statGraph(action: any) {\n  try {\n    const data = yield call(Api.statGraph, action);\n    const type: Types.ActionTypesGraph = 'GRAPH_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesGraph = 'GRAPH_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Получение статистики таблицы\n * @param action\n */\nfunction* statTable(action: any) {\n  try {\n    const data = yield call(Api.statTable, action);\n    const type: Types.ActionTypesTable = 'TABLE_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesTable = 'TABLE_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Получение кампаний\n * @param action\n */\nfunction* getCampaigns(action: any) {\n  try {\n    const data = yield call(Api.getCampaigns, action);\n    const type: Types.ActionTypesCampaignsGet = 'GET_CAMPAIGNS_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesCampaignsGet = 'GET_CAMPAIGNS_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Изменение статуса кампании\n * @param action\n */\nfunction* changeCampaignStatus(action: any) {\n  try {\n    const data = yield call(Api.changeCampaignStatus, action);\n    const type: Types.ActionTypesChangeCampaignStatus = 'CHANGE_CAMPAIGN_STATUS_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesChangeCampaignStatus = 'CHANGE_CAMPAIGN_STATUS_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Создание кампании\n * @param action\n */\nfunction* createCampaign(action: any) {\n  try {\n    const data = yield call(Api.createCampaign, action);\n    const type: Types.ActionTypesCreateCampaign = 'CREATE_CAMPAIGN_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesCreateCampaign = 'CREATE_CAMPAIGN_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Поиск страны\n * @param action\n */\nfunction* searchCountries(action: any) {\n  try {\n    const data = yield call(Api.searchCoutries, action);\n    const type: Types.ActionTypesSearchCounrties = 'SEARCH_COUNTRIES_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesSearchCounrties = 'SEARCH_COUNTRIES_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Получение офферов\n * @param action\n */\nfunction* getOffers(action: any) {\n  try {\n    const data = yield call(Api.getOffers, action);\n    const type: Types.ActionTypesGetOffers = 'GET_OFFERS_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesGetOffers = 'GET_OFFERS_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Создание оффера\n * @param action\n */\nfunction* createOffer(action: any) {\n  try {\n    const data = yield call(Api.createOffer, action);\n    const type: Types.ActionTypesCreateOffer = 'CREATE_OFFER_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesCreateOffer = 'CREATE_OFFER_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Загрузка иконки оффера\n * @param action\n */\nfunction* uploadOfferIcon(action: any) {\n  try {\n    const data = yield call(Api.uploadIcon, action);\n    const type: Types.ActionTypesUploadOfferIcon = 'UPLOAD_OFFER_ICON_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesUploadOfferIcon = 'UPLOAD_OFFER_ICON_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Загрузка изображения оффера\n * @param action\n */\nfunction* uploadOfferImage(action: any) {\n  try {\n    const data = yield call(Api.uploadImage, action);\n    const type: Types.ActionTypesUploadOfferImage = 'UPLOAD_OFFER_IMAGE_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesUploadOfferImage = 'UPLOAD_OFFER_IMAGE_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Удаление кампании\n * @param action\n */\nfunction* deleteCampaign(action: any) {\n  try {\n    const data = yield call(Api.deleteCampaign, action);\n    const type: Types.ActionTypesDeleteCampaign = 'DELETE_CAMPAIGN_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesDeleteCampaign = 'DELETE_CAMPAIGN_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Получение кампании\n * @param action\n */\nfunction* getCampaign(action: any) {\n  try {\n    const data = yield call(Api.getCampaign, action);\n    const type: Types.ActionTypesGetCampaign = 'GET_CAMPAIGN_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesGetCampaign = 'GET_CAMPAIGN_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Изменение оффера\n * @param action\n */\nfunction* updateOffer(action: any) {\n  try {\n    const data = yield call(Api.updateOffer, action);\n    const type: Types.ActionTypesUpdateOffer = 'UPDATE_OFFER_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesUpdateOffer = 'UPDATE_OFFER_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n/**\n * Изменение кампании\n * @param action\n */\nfunction* updateCampaign(action: any) {\n  try {\n    const data = yield call(Api.updateCampaign, action);\n    const type: Types.ActionTypesUpdateCampaign = 'UPDATE_CAMPAIGN_SUCCEEDED';\n    yield put({ type, data });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    if (dev) console.error(e);\n    const type: Types.ActionTypesUpdateCampaign = 'UPDATE_CAMPAIGN_FAILED';\n    yield put({ type, errorData });\n  }\n}\n\n// Прослушиватели задач\n\n/**\n * Прослушиватель задачи данных пользователя\n */\nexport function* userSaga() {\n  yield takeLatest('USER_FETCH_REQUESTED', fetchUser);\n}\n\n/**\n * Прослушиватель задачи входа пользователя\n */\nexport function* loginSaga() {\n  yield takeLatest('LOGIN_REQUESTED', login);\n}\n\n/**\n * Прослушиватель задачи регистрации пользователя\n */\nexport function* registerSaga() {\n  yield takeLatest('REGISTRATION_REQUESTED', register);\n}\n\n/**\n * Прослушиватель задачи подтверждения почты\n */\nexport function* confirmSaga() {\n  yield takeLatest('CONFIRM_REQUESTED', confirm);\n}\n\n/**\n * Прослушиватель задачи проверки почты\n */\nexport function* emailSaga() {\n  yield takeLatest('EMAIL_REQUESTED', getEmail);\n}\n\n/**\n * Прослушиватель задачи смены пароля\n */\nexport function* passSaga() {\n  const type: Types.ActionTypesChangePass = 'CHANGE_PASS_REQUESTED';\n  yield takeLatest(type, changePassword);\n}\n\n/**\n * Прослушиватель задачи получение статистики графика\n */\nexport function* graphSaga() {\n  const type: Types.ActionTypesGraph = 'GRAPH_REQUESTED';\n  yield takeLatest(type, statGraph);\n}\n\n/**\n * Прослушиватель задачи получение статистики таблицы\n */\nexport function* tableSaga() {\n  const type: Types.ActionTypesTable = 'TABLE_REQUESTED';\n  yield takeLatest(type, statTable);\n}\n\n/**\n * Прослушиватель задачи получения кампаний\n */\nexport function* getCampaignsSaga() {\n  const type: Types.ActionTypesCampaignsGet = 'GET_CAMPAIGNS_REQUESTED';\n  yield takeLatest(type, getCampaigns);\n}\n\n/**\n * Прослушиватель задачи изменения статуса кампании\n */\nexport function* changeCampaignStatusSaga() {\n  const type: Types.ActionTypesChangeCampaignStatus = 'CHANGE_CAMPAIGN_STATUS_REQUESTED';\n  yield takeLatest(type, changeCampaignStatus);\n}\n\n/**\n * Прослушиватель задачи создания кампании\n */\nexport function* createCampaignSaga() {\n  const type: Types.ActionTypesCreateCampaign = 'CREATE_CAMPAIGN_REQUESTED';\n  yield takeLatest(type, createCampaign);\n}\n\n/**\n * Прослушиватель задачи поиска стран\n */\nexport function* searchCountriesSaga() {\n  const type: Types.ActionTypesSearchCounrties = 'SEARCH_COUNTRIES_REQUESTED';\n  yield takeLatest(type, searchCountries);\n}\n\n/**\n * Прослушиватель задачи получения офферов\n */\nexport function* getOffersSaga() {\n  const type: Types.ActionTypesGetOffers = 'GET_OFFERS_REQUESTED';\n  yield takeLatest(type, getOffers);\n}\n\n/**\n * Прослушиватель задачи создания оффера\n */\nexport function* createOfferSaga() {\n  const type: Types.ActionTypesCreateOffer = 'CREATE_OFFER_REQUESTED';\n  yield takeLatest(type, createOffer);\n}\n\n/**\n * Прослушиватель задачи загрузки иконки оффера\n */\nexport function* uploadOfferIconSaga() {\n  const type: Types.ActionTypesUploadOfferIcon = 'UPLOAD_OFFER_ICON_REQUESTED';\n  yield takeLatest(type, uploadOfferIcon);\n}\n\n/**\n * Прослушиватель задачи загрузки изображения оффера\n */\nexport function* uploadOfferImageSaga() {\n  const type: Types.ActionTypesUploadOfferImage = 'UPLOAD_OFFER_IMAGE_REQUESTED';\n  yield takeLatest(type, uploadOfferImage);\n}\n\n/**\n * Прослушиватель задачи удаления кампании\n */\nexport function* deleteCampaignSaga() {\n  const type: Types.ActionTypesDeleteCampaign = 'DELETE_CAMPAIGN_REQUESTED';\n  yield takeLatest(type, deleteCampaign);\n}\n\n/**\n * Прослушиватель задачи получения кампании\n */\nexport function* getCampaignSaga() {\n  const type: Types.ActionTypesGetCampaign = 'GET_CAMPAIGN_REQUESTED';\n  yield takeLatest(type, getCampaign);\n}\n\n/**\n * Прослушиватель задачи изменение оффера\n */\nexport function* updateOfferSaga() {\n  const type: Types.ActionTypesUpdateOffer = 'UPDATE_OFFER_REQUESTED';\n  yield takeLatest(type, updateOffer);\n}\n\n/**\n * Прослушиватель задачи изменение кампании\n */\nexport function* updateCampaignSaga() {\n  const type: Types.ActionTypesUpdateCampaign = 'UPDATE_CAMPAIGN_REQUESTED';\n  yield takeLatest(type, updateCampaign);\n}","/home/sergey/Projects/ads-panel-app/src/api/index.ts",[],"/home/sergey/Projects/ads-panel-app/src/store/reducers.ts",[],"/home/sergey/Projects/ads-panel-app/src/store/index.ts",[],"/home/sergey/Projects/ads-panel-app/src/api/request.ts",[],"/home/sergey/Projects/ads-panel-app/src/components/Panel.tsx",[],"/home/sergey/Projects/ads-panel-app/src/lib/index.ts",["177"],"/home/sergey/Projects/ads-panel-app/src/views/Page404.tsx",["178","179"],"import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport * as lib from '../lib';\n\nexport default function Page404() {\n  useEffect(() => {\n    \n  }, []);\n\n  return <Redirect to=\"/\" />;\n}\n",["180","181","182","183","184"],"/home/sergey/Projects/ads-panel-app/src/views/Home.tsx",["185","186","187"],"import React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport * as lib from '../lib';\n\nexport default function Home() {\n  useEffect(() => {\n    \n  }, []);\n\n  return <Typography variant=\"h2\">Home page</Typography>;\n}","/home/sergey/Projects/ads-panel-app/src/components/Auth.tsx",[],"/home/sergey/Projects/ads-panel-app/src/components/Dialog.tsx",[],"/home/sergey/Projects/ads-panel-app/src/components/AlertMessage.tsx",["188"],"import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport * as Types from '../react-app-env';\n\nexport default function AllertMessage(props: Types.AlertProps) {\n  const { message, status }: any = props;\n  return (\n    <Alert variant=\"outlined\" severity={status}>\n      {message}\n    </Alert>\n  );\n}","/home/sergey/Projects/ads-panel-app/src/views/Registration.tsx",["189","190"],"/home/sergey/Projects/ads-panel-app/src/views/Confirm.tsx",["191"],"import React, { useEffect, useState } from 'react';\nimport queryString from 'query-string';\nimport { Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport AlertMessage from '../components/AlertMessage';\nimport * as Types from '../react-app-env';\nimport { action, store } from '../store';\n\nexport default function Confirm() {\n  const history = useHistory();\n  const parsedQuery = queryString.parse(history.location.search);\n  const { e, k } = parsedQuery;\n  const _alert: Types.AlertProps = {\n    message: 'Alert closed',\n    status: 'info',\n    open: false,\n  };\n  const [alert, setAlert] = useState(_alert);\n\n  useEffect(() => {\n    store.subscribe(() => {\n      const state = store.getState();\n      const { confirmData } = state;\n      if (confirmData) {\n        const { data }: any = confirmData;\n        if (confirmData.type === 'CONFIRM_SUCCEEDED') {\n          setAlert({\n            open: true,\n            status: data.result,\n            message: data.message,\n          });\n        }\n      }\n    });\n    action({\n      type: 'CONFIRM_REQUESTED',\n      args: {\n        params: { e, k },\n      },\n    });\n  }, []);\n\n  return (\n    <div className=\"col-center\">\n      <Typography variant=\"h4\">{e}</Typography>\n      <div className=\"form-item\">\n        {alert.open ? <AlertMessage message={alert.message} status={alert.status} /> : ''}\n      </div>\n    </div>\n  );\n}","/home/sergey/Projects/ads-panel-app/src/views/Forgot.tsx",[],"/home/sergey/Projects/ads-panel-app/src/views/ChangePassword.tsx",["192"],"import React, { useState, useEffect } from 'react';\nimport { Typography, FormLabel, FormGroup, TextField, Button } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport queryString from 'query-string';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport BlockProgress from '../components/BlockProgress';\nimport AlertMessage from '../components/AlertMessage';\nimport { loadStore, store, action } from '../store';\nimport * as Types from '../react-app-env';\n\nlet _storeSubs: any = () => {};\nlet _loadStoreSubs: any = () => {};\n\nexport default function ChangePassword() {\n  const { enqueueSnackbar } = useSnackbar();\n  const history = useHistory();\n  const [password, setPassword] = useState('');\n  const [passwordRepeat, setPasswordRepeat] = useState('');\n  const [load, setLoad] = useState(false);\n  const parsedQuery = queryString.parse(history.location.search);\n  const _alert: Types.AlertProps = {\n    message: 'Alert closed',\n    status: 'info',\n    open: false,\n  };\n  const [alert, setAlert] = useState(_alert);\n\n  useEffect(() => {\n    _loadStoreSubs = loadStore.subscribe(() => {\n      setLoad(loadStore.getState().value);\n    });\n    _storeSubs = store.subscribe(() => {\n      const state = store.getState();\n      if (state.passData) {\n        if (state.type === 'CHANGE_PASS_FAILED') {\n          const { message }: any = state.passData?.data?.errorData;\n          enqueueSnackbar(`Change password: ${message}`);\n          loadStore.dispatch({ type: 'SET_LOAD', value: false });\n        } else if (state.type === 'CHANGE_PASS_SUCCEEDED') {\n          loadStore.dispatch({ type: 'SET_LOAD', value: false });\n          const { data } = state.passData;\n          const newAlert: any = {\n            open: true,\n            message: data?.message,\n            status: data?.result,\n          };\n          setAlert(newAlert);\n          if (data?.result === 'success') {\n            setTimeout(() => {\n              history.push('/');\n            }, 1500);\n          }\n        }\n      }\n    });\n    return () => {\n      _storeSubs();\n      _loadStoreSubs();\n    };\n  }, []);\n\n  const token: any = parsedQuery.k;\n  const email: any = parsedQuery.e;\n  return (\n    <div className={clsx('login-wrapper', 'col-center')}>\n      <div className=\"header\">\n        <Typography variant=\"h4\">Change password form</Typography>\n      </div>\n      <div className=\"form-item\">\n        <Typography>Please fill in all fields</Typography>\n      </div>\n      <FormGroup>\n        <FormLabel>Password</FormLabel>\n        <div className={clsx('form-item', 'col-center')}>\n          <TextField\n            defaultValue={password}\n            onChange={(e: any) => {\n              setPassword(e.target.value);\n            }}\n            type=\"password\"\n            variant=\"outlined\"\n            placeholder=\"password\"\n          />\n        </div>\n        <FormLabel>Password repeat</FormLabel>\n        <div className={clsx('form-item', 'col-center')}>\n          <TextField\n            defaultValue={passwordRepeat}\n            onChange={(e: any) => {\n              setPasswordRepeat(e.target.value);\n            }}\n            type=\"password\"\n            variant=\"outlined\"\n            placeholder=\"password repeat\"\n          />\n        </div>\n      </FormGroup>\n      <div className=\"form-item\">\n        {load ? (\n          <BlockProgress />\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n            // eslint-disable-next-line no-unused-vars\n            onClick={(e: any) => {\n              loadStore.dispatch({ type: 'SET_LOAD', value: true });\n              action({\n                type: 'CHANGE_PASS_REQUESTED',\n                args: { token, body: { password, password_repeat: passwordRepeat, email } },\n              });\n              setAlert(_alert);\n            }}>\n            Send\n          </Button>\n        )}\n      </div>\n      <div className=\"form-item\">\n        {alert.open ? <AlertMessage message={alert.message} status={alert.status} /> : ''}\n      </div>\n      <div className=\"form-item\">\n        <Link to=\"/forgot\">Send new email</Link>\n      </div>\n    </div>\n  );\n}","/home/sergey/Projects/ads-panel-app/src/components/Graph.tsx",["193","194","195"],"import React, { useEffect } from 'react';\nimport { Paper } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { ArgumentAxis, ValueAxis, Chart, LineSeries, Legend } from '@devexpress/dx-react-chart-material-ui';\nimport * as Types from '../react-app-env';\n\nexport default function Graph(props: Types.GraphProps) {\n  const { data } = props;\n\n  const selfData =\n    data.length === 0\n      ? [\n          {\n            date: 0,\n            clicks: 0,\n            cost: 0,\n          },\n        ]\n      : data;\n\n  useEffect(() => {\n    // console.log(data)\n  }, [data]);\n\n  return (\n    <Paper>\n      <Chart data={selfData}>\n        <ArgumentAxis tickSize={23} position=\"top\" showGrid={false} />\n        <ValueAxis showGrid={true} />\n        <LineSeries name=\"Impressions\" valueField=\"impressions\" argumentField=\"date\" />\n        <LineSeries name=\"Requests\" valueField=\"requests\" argumentField=\"date\" />\n        <LineSeries name=\"Clicks\" valueField=\"clicks\" argumentField=\"date\" />\n        <Legend position=\"bottom\" />\n      </Chart>\n    </Paper>\n  );\n};\n","/home/sergey/Projects/ads-panel-app/src/components/BlockProgress.tsx",["196"],"import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nexport default function BlockProgress() {\n  return <CircularProgress />;\n}","/home/sergey/Projects/ads-panel-app/src/components/BlockSelect.tsx",["197"],"import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport * as Types from '../react-app-env';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 200,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  })\n);\n\nexport default function SimpleSelect(props: Types.SelectProps) {\n  const { children, handleChange, value, name } = props;\n  const classes = useStyles();\n  return (\n    <div>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">{name}</InputLabel>\n        <Select\n          color=\"secondary\"\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={value}\n          onChange={handleChange}\n          label={name}>\n          {children}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}","/home/sergey/Projects/ads-panel-app/src/components/ListElement.tsx",["198"],"import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport * as Types from '../react-app-env';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  })\n);\n\nexport default function FolderList(props: Types.ListElementProps) {\n  const { children, title, value } = props;\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root}>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>{children}</Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={title} secondary={value} />\n      </ListItem>\n    </List>\n  );\n}","/home/sergey/Projects/ads-panel-app/src/components/DatePicker.tsx",[],["199","200","201","202","203"],"/home/sergey/Projects/ads-panel-app/src/components/TableStatisistic.tsx",["204","205","206"],"/home/sergey/Projects/ads-panel-app/src/components/Pagination.tsx",[],"/home/sergey/Projects/ads-panel-app/src/worker/index.ts",[],"/home/sergey/Projects/ads-panel-app/src/components/TableCampaigns.tsx",["207","208"],"/home/sergey/Projects/ads-panel-app/src/components/BlockPopper.tsx",["209","210"],"import React from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport Fade from '@material-ui/core/Fade';\nimport * as Types from '../react-app-env';\n\n\nexport default function TransitionsPopper(props: Types.PopperProps) {\n  const { anchorEl, content } = props;\n  const open = Boolean(anchorEl);\n  // eslint-disable-next-line prettier/prettier\n  const id = open ? 'transitions-popper' : undefined\n  return (\n    <div>\n      <Popper placement=\"bottom-start\" id={id} open={open} anchorEl={anchorEl} transition>\n        {({ TransitionProps }) => (\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          <Fade {...TransitionProps} timeout={350}>\n            {content}\n          </Fade>\n        )}\n      </Popper>\n    </div>\n  );\n}","/home/sergey/Projects/ads-panel-app/src/api/requestMultipart.ts",["211","212","213"],"/**\n *  Метод отправки изображений на сервер\n */\nimport { Cookies } from 'react-cookie';\nimport * as Types from '../react-app-env';\n\nconst cookies = new Cookies();\n\nconst { REACT_APP_SERVER_URL, REACT_APP_SERVER_URL_LOCAL, NODE_ENV } = process.env;\nconst dev = NODE_ENV === 'development';\n\nconst serverUrl = dev ? REACT_APP_SERVER_URL_LOCAL : REACT_APP_SERVER_URL;\n\nexport default function requestMultipart(\n  path: string,\n  paramBody: any = null,\n): Promise<Types.ServerResponse> {\n  const jwtToken = cookies.get('_qt');\n  return new Promise((resolve, reject) => {\n    const params: any = {\n      method: 'POST',\n      headers: {\n        'xx-auth': jwtToken, // В большинстве запросов токен будет JWT\n      },\n      body: paramBody\n    };\n    fetch(`${serverUrl}${path}`, params)\n      .then((r: any) => r.json())\n      .then((data: any) => {\n        resolve(data);\n      })\n      .catch((e: Error) => {\n        // eslint-disable-next-line no-console\n        if (dev) console.error(e);\n        reject(e);\n      });\n  });\n}","/home/sergey/Projects/ads-panel-app/src/views/Campaigns.tsx",[],"/home/sergey/Projects/ads-panel-app/src/views/CreateUpdateCampaign.tsx",[],{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"214","replacedBy":"224"},{"ruleId":"216","replacedBy":"225"},{"ruleId":"218","replacedBy":"226"},{"ruleId":"220","replacedBy":"227"},{"ruleId":"222","replacedBy":"228"},{"ruleId":"214","replacedBy":"229"},{"ruleId":"216","replacedBy":"230"},{"ruleId":"218","replacedBy":"231"},{"ruleId":"220","replacedBy":"232"},{"ruleId":"222","replacedBy":"233"},{"ruleId":"214","replacedBy":"234"},{"ruleId":"216","replacedBy":"235"},{"ruleId":"218","replacedBy":"236"},{"ruleId":"220","replacedBy":"237"},{"ruleId":"222","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":507,"column":2,"nodeType":null,"endLine":507,"endColumn":2,"fix":"241"},{"ruleId":"239","severity":1,"message":"240","line":44,"column":2,"nodeType":null,"endLine":44,"endColumn":2,"fix":"242"},{"ruleId":"243","severity":1,"message":"244","line":3,"column":13,"nodeType":"245","messageId":"246","endLine":3,"endColumn":16},{"ruleId":"239","severity":1,"message":"247","line":6,"column":20,"nodeType":null,"endLine":8,"endColumn":3,"fix":"248"},{"ruleId":"214","replacedBy":"249"},{"ruleId":"216","replacedBy":"250"},{"ruleId":"218","replacedBy":"251"},{"ruleId":"220","replacedBy":"252"},{"ruleId":"222","replacedBy":"253"},{"ruleId":"243","severity":1,"message":"244","line":3,"column":13,"nodeType":"245","messageId":"246","endLine":3,"endColumn":16},{"ruleId":"239","severity":1,"message":"247","line":6,"column":20,"nodeType":null,"endLine":8,"endColumn":3,"fix":"254"},{"ruleId":"239","severity":1,"message":"240","line":11,"column":2,"nodeType":null,"endLine":11,"endColumn":2,"fix":"255"},{"ruleId":"239","severity":1,"message":"240","line":12,"column":2,"nodeType":null,"endLine":12,"endColumn":2,"fix":"256"},{"ruleId":"243","severity":1,"message":"257","line":52,"column":10,"nodeType":"245","messageId":"246","endLine":52,"endColumn":14},{"ruleId":"239","severity":1,"message":"240","line":259,"column":2,"nodeType":null,"endLine":259,"endColumn":2,"fix":"258"},{"ruleId":"239","severity":1,"message":"240","line":51,"column":2,"nodeType":null,"endLine":51,"endColumn":2,"fix":"259"},{"ruleId":"239","severity":1,"message":"240","line":128,"column":2,"nodeType":null,"endLine":128,"endColumn":2,"fix":"260"},{"ruleId":"243","severity":1,"message":"261","line":3,"column":8,"nodeType":"245","messageId":"246","endLine":3,"endColumn":12},{"ruleId":"239","severity":1,"message":"262","line":4,"column":9,"nodeType":null,"endLine":4,"endColumn":61,"fix":"263"},{"ruleId":"239","severity":1,"message":"264","line":37,"column":2,"nodeType":null,"endLine":37,"endColumn":3,"fix":"265"},{"ruleId":"239","severity":1,"message":"240","line":6,"column":2,"nodeType":null,"endLine":6,"endColumn":2,"fix":"266"},{"ruleId":"239","severity":1,"message":"240","line":39,"column":2,"nodeType":null,"endLine":39,"endColumn":2,"fix":"267"},{"ruleId":"239","severity":1,"message":"240","line":34,"column":2,"nodeType":null,"endLine":34,"endColumn":2,"fix":"268"},{"ruleId":"214","replacedBy":"269"},{"ruleId":"216","replacedBy":"270"},{"ruleId":"218","replacedBy":"271"},{"ruleId":"220","replacedBy":"272"},{"ruleId":"222","replacedBy":"273"},{"ruleId":"243","severity":1,"message":"274","line":11,"column":8,"nodeType":"245","messageId":"246","endLine":11,"endColumn":19},{"ruleId":"239","severity":1,"message":"275","line":23,"column":20,"nodeType":null,"endLine":25,"endColumn":13,"fix":"276"},{"ruleId":"239","severity":1,"message":"240","line":80,"column":2,"nodeType":null,"endLine":80,"endColumn":2,"fix":"277"},{"ruleId":"239","severity":1,"message":"278","line":113,"column":41,"nodeType":null,"endLine":113,"endColumn":84,"fix":"279"},{"ruleId":"239","severity":1,"message":"240","line":135,"column":2,"nodeType":null,"endLine":135,"endColumn":2,"fix":"280"},{"ruleId":"239","severity":1,"message":"281","line":6,"column":1,"nodeType":null,"endLine":7,"endColumn":1,"fix":"282"},{"ruleId":"239","severity":1,"message":"240","line":24,"column":2,"nodeType":null,"endLine":24,"endColumn":2,"fix":"283"},{"ruleId":"239","severity":1,"message":"284","line":16,"column":24,"nodeType":null,"endLine":16,"endColumn":25,"fix":"285"},{"ruleId":"239","severity":1,"message":"286","line":25,"column":22,"nodeType":null,"endLine":25,"endColumn":22,"fix":"287"},{"ruleId":"239","severity":1,"message":"240","line":38,"column":2,"nodeType":null,"endLine":38,"endColumn":2,"fix":"288"},"lines-around-directive",["289"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["289"],[],[],[],[],["289"],[],[],[],[],["289"],[],[],[],[],"prettier/prettier","Insert `⏎`",{"range":"290","text":"291"},{"range":"292","text":"291"},"no-unused-vars","'lib' is defined but never used.","Identifier","unusedVar","Delete `⏎····⏎··`",{"range":"293","text":"294"},["289"],[],[],[],[],{"range":"295","text":"294"},{"range":"296","text":"291"},{"range":"297","text":"291"},"'user' is assigned a value but never used.",{"range":"298","text":"291"},{"range":"299","text":"291"},{"range":"300","text":"291"},"'clsx' is defined but never used.","Replace `·ArgumentAxis,·ValueAxis,·Chart,·LineSeries,·Legend·` with `⏎··ArgumentAxis,⏎··ValueAxis,⏎··Chart,⏎··LineSeries,⏎··Legend,⏎`",{"range":"301","text":"302"},"Delete `;`",{"range":"303","text":"294"},{"range":"304","text":"291"},{"range":"305","text":"291"},{"range":"306","text":"291"},["289"],[],[],[],[],"'BlockSelect' is defined but never used.","Replace `⏎····⏎··},[icons]·` with `},·[icons]`",{"range":"307","text":"308"},{"range":"309","text":"291"},"Replace `·history.push(`/update-campaign/${row.id}`)` with `⏎··························history.push(`/update-campaign/${row.id}`);⏎·······················`",{"range":"310","text":"311"},{"range":"312","text":"291"},"Delete `⏎`",{"range":"313","text":"294"},{"range":"314","text":"291"},"Delete `,`",{"range":"315","text":"294"},"Insert `,`",{"range":"316","text":"317"},{"range":"318","text":"291"},"padding-line-between-statements",[13183,13183],"\n",[1040,1040],[174,182],"",[181,189],[257,257],[317,317],[8389,8389],[1410,1410],[4193,4193],[118,170],"\n  ArgumentAxis,\n  ValueAxis,\n  Chart,\n  LineSeries,\n  Legend,\n",[1054,1055],[156,156],[1143,1143],[991,991],[800,818],"}, [icons]",[2969,2969],[4782,4825],"\n                          history.push(`/update-campaign/${row.id}`);\n                       ",[5483,5483],[161,162],[757,757],[447,448],[733,733],",",[1024,1024]]